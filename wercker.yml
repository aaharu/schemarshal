box: tcnksm/gox
build:
  steps:
    - setup-go-workspace

    # Gets the dependencies
    - script:
        name: glide install
        code: |
          curl -L -o glide.tar.gz https://github.com/Masterminds/glide/releases/download/v0.12.3/glide-v0.12.3-linux-amd64.tar.gz
          tar -zxf glide.tar.gz
          mv linux-amd64/glide "${WERCKER_SOURCE_DIR}/glide"
          rm -rf linux-amd64 glide.tar.gz
          "${WERCKER_SOURCE_DIR}/glide" --version
          "${WERCKER_SOURCE_DIR}/glide" install

    # Build the project
    - script:
        name: go build
        code: |
          go build $("${WERCKER_SOURCE_DIR}/glide" novendor)

    # Test the project
    - script:
        name: go test and goveralls
        code: |
          echo "mode: count" > c.out
          for pkg in $("${WERCKER_SOURCE_DIR}/glide" novendor); do
            go test -v -covermode=count -coverprofile="pkg.out" "${pkg}"
            if [ -f "pkg.out" ]; then
              tail -n +2 "pkg.out" >> c.out
              rm pkg.out
            fi
          done
          go get github.com/mattn/goveralls
          GIT_BRANCH="${WERCKER_GIT_BRANCH}" "${GOPATH}/bin/goveralls" -v -coverprofile=c.out -service=wercker.com -repotoken "${COVERALLS_TOKEN}"

    # corros compile
    - tcnksm/gox:
        os: "darwin linux windows freebsd netbsd"

    - tcnksm/zip:
      input: ${WERCKER_OUTPUT_DIR}/pkg
      output: ${WERCKER_OUTPUT_DIR}/dist

    - script:
        name: output release tag
        code: |
          fgrep 'const Version' "${WERCKER_SOURCE_DIR}/version/version.go" | cut -f4 -d ' ' | tr -d '"' > "${WERCKER_OUTPUT_DIR}/tag.out"

deploy:
  steps:
    - script:
      name: restore release tag
      code: |
        export RELEASE_TAG=$(cat tag.out)
    - tcnksm/ghr:
      token: ${GITHUB_TOKEN}
      input: dist
      version: ${RELEASE_TAG}
